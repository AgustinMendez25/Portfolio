{
    "header": {
        "portfolio":"Portfolio",
        "about":"ABOUT ME",
        "skills":"SKILLS",
        "projects":"PROJECTS",
        "contact":"CONTACT",
        "projectsBtn":"See projects",
        "otherProjectsBtn":"See other projects"
    },
    "aboutme":{
        "title": "About Me",
        "paragraph1": "I'm Agustín Mendez, a young backend developer with a deep passion for coding and problem-solving. I approach every task with meticulous analysis, aiming to develop efficient and well-structured solutions. I focus on working with organization and responsibility, always trying to overcome challenges in the most effective way.",
        "paragraph2": "I graduated in 2022 from Technical School N°32 \"General José de San Martín\" with a focus on IT, where my journey into programming and technology began. I'm currently pursuing a degree in \"Digital Technology\" at Universidad Torcuato Di Tella, where I am on a full scholarship. In addition to my studies, I work part-time with Salesforce, specially focused on backend tasks using Apex programming language.",
        "paragraph3": "My ambition is to continue growing as a backend developer, expanding my knowledge day by day in order to become an expert in this field."
    },
    "skills":{
        "title":"My Skills",
        "technologies":"Technologies",
        "releaseTools":"Release Tools",
        "languages":"Languages"
    },
    "projects":{
        "title":"My Projects"
    },
    "contact":{
        "title":"Contact Me!",
        "subtitle": "Feel free to reach out to me!"
    },
    "sf-fieldsdinamicos":{
        "title":"Dynamic Fields Implementation",
        "description": "Dynamic system used for implementations that require modifying fields and objects dinamicaly without making changes in the existent code. This design was implemented in several Salesforce projects that needed to follow this structure under the mentioned conditions. <br> Some parts of the developed code are detailed below:",
        "item1": "Object's List",
        "body1": "From a list of objects where data is being searched and the names of it's fields, this implementation gets each object and each set of fields (their lookups are preserved using dots, for example: Account.PRimaryContact.LastName). For each field, the recursive function getRelationField retrieves the field's information.",
        "item2": "Recursive Function getRelationField",
        "body2": "Given an object and a field that can have as many lookups as needed, this recursive function retrieves the field from the object and returns its value. In each recursive iteration, the next lookup is retrieved until the final field is reached, where the expected data is returned. <br> If the field is not found, the function returns null."
    }
}